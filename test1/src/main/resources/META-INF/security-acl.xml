<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
			http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-3.0.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.1.xsd
	   		">
	<security:global-method-security pre-post-annotations="enabled" access-decision-manager-ref="businessAccessDecisionManager">
		<security:expression-handler ref="expressionHandler" />
	</security:global-method-security>
	
	<bean id="businessAccessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
      	<property name="decisionVoters">
         	<list>
            	<bean class="org.springframework.security.access.prepost.PreInvocationAuthorizationAdviceVoter">
            		<constructor-arg index="0">
            			<bean class="org.springframework.security.access.expression.method.ExpressionBasedPreInvocationAdvice">
            				<property name="expressionHandler" ref="expressionHandler" />
            			</bean>
            		</constructor-arg>
            	</bean>
         	</list>
      	</property>
   	</bean>
	
	<bean id="expressionHandler" class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler"
		p:permissionEvaluator-ref="permissionEvaluator" />
	
	<bean class="org.springframework.security.acls.AclPermissionEvaluator" id="permissionEvaluator">
		<constructor-arg ref="aclService"/>
	</bean>

	<bean class="org.springframework.security.acls.jdbc.JdbcMutableAclService" id="aclService">
		<constructor-arg ref="dataSource"/>
        <constructor-arg ref="lookupStrategy"/>
        <constructor-arg ref="aclCache"/>
        <property name="classIdentityQuery" value="select max(ID) from ACL_CLASS" />
        <property name="sidIdentityQuery" value="select max(ID) from ACL_SID" />
	</bean>
	
	<bean id="lookupStrategy" class="com.googlecode.doce.security.BasicLookupStrategy">
        <constructor-arg ref="dataSource"/>
        <constructor-arg ref="aclCache"/>
        <constructor-arg ref="aclAuthorizationStrategy"/>
        <constructor-arg ref="auditLogger"/>
    </bean>

  	<bean id="aclCache" class="org.springframework.security.acls.domain.EhCacheBasedAclCache">
        <constructor-arg>
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean">
                <property name="cacheManager">
                    <bean class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
                </property>
                <property name="cacheName" value="aclCache"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="aclAuthorizationStrategy" class="org.springframework.security.acls.domain.AclAuthorizationStrategyImpl">
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.core.authority.GrantedAuthorityImpl">
                    <constructor-arg value="ROLE_ADMIN"/>
                </bean>
                <bean class="org.springframework.security.core.authority.GrantedAuthorityImpl">
                    <constructor-arg value="ROLE_ADMIN"/>
                </bean>
                <bean class="org.springframework.security.core.authority.GrantedAuthorityImpl">
                    <constructor-arg value="ROLE_ADMIN"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
 	<bean id="auditLogger" class="org.springframework.security.acls.domain.ConsoleAuditLogger"/>
 	
    <bean id="authenticationManager" class="org.springframework.security.authentication.ProviderManager">
		<property name="providers">
			<list>
				<ref local="daoAuthenticationProvider"/>
			</list>
		</property>
	</bean>
	<bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
		<property name="hideUserNotFoundExceptions" value="false" />
	</bean>
	<bean id="userDetailsService" class="org.springframework.security.core.userdetails.memory.InMemoryDaoImpl">
		<property name="userMap">
			<value>    
                test=000000,ROLE_USER  
            </value>    
		</property>
	</bean>
</beans>